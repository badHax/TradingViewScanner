version: '3.4'

networks:
  tvscanner_backend:
  tvscanner_fronend:

services:
  tvscanner.web:
    image: ${DOCKER_REGISTRY-}tvscannerweb
    container_name: tvscanner-web
    build:
      context: .
      dockerfile: Dockerfile.Web
    ports:
      - 15007:80
    depends_on:
      - tvscanner.api
    networks:
    - tvscanner_fronend
  tvscanner.api:
    image: ${DOCKER_REGISTRY-}tvscannerapi
    container_name: tvscanner-api
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile.API
    ports:
    - 15005:8080
    - 15006:8081
    environment: # Development environment variables
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__TVScannerContext=Host=tvscanner.db;Port=5432;Database=TVScanner;Username=postgres;password=Password123;
      - Logging__LogLevel__Default=Information
    depends_on:
      - tvscanner.db
    networks:
    - tvscanner_backend
    - tvscanner_fronend
  tvscanner.db:
    image: postgres:latest
    container_name: tvscanner-db
    restart: on-failure
    ports:
      - 15008:5432
    environment:
      - POSTGRES_PASSWORD=Password123
    networks:
      - tvscanner_backend